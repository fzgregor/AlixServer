# !/bin/sh
# this script is take from
# http://hartvig.de/2009/howto-automatically-spin-down-external-usb-hard-drives-in-ubuntu/
# and adapted to 
# - write state to /tmp
# - support different harddrives at the same time
# - arguemtn check
# - only save one state file
# - dont use md5, just compare content
# - dont try opening not existing file
# - throw all sdparm output to /dev/null
# form the comments below the article
# - check for root
# - also support uuids to identify sdX

# check argument
if [ ! $1 ]; then
echo "You have to provide a device or uuid!" 1>&2
exit 1
fi

# check permissions (root)
if [ "$(id -u)" != "0" ]; then
echo “This script must be run as root” 1>&2
exit 1
fi

#convert UUID to ID
disk=$(/sbin/blkid | grep -m 1 $1 | cut -c 6-8)

#check if the disk uuid (or sdX), or pieces of it were ok
if [ ! -n $disk ]; then
echo “no such disk – disk!” 1>&2
exit 1
fi

# Get new state from diskstats
NEWstate=$(cat -A /proc/diskstats | grep "$disk ")

# if no changes, power down and previous state
test -e /tmp/idle-spindown-$disk-state.txt
if [ $? -eq 0 ] && [ "$NEWstate" = "$(cat /tmp/idle-spindown-$disk-state.txt)" ]; then
        /usr/bin/sdparm --flexible --command=capacity /dev/$disk > /dev/null 2>&1
fi

# Write current state to file
echo "$NEWstate" > /tmp/idle-spindown-$disk-state.txt
